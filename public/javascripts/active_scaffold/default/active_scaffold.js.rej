***************
*** 194,200 ****
      this.loading_indicator = loading_indicator;
      this.hide_target = false;
      this.position = this.tag.getAttribute('position');
- 		this.page_link = this.tag.getAttribute('page_link');
  
      this.onclick = this.tag.onclick;
      this.tag.onclick = null;
--- 194,200 ----
      this.loading_indicator = loading_indicator;
      this.hide_target = false;
      this.position = this.tag.getAttribute('position');
+                 this.page_link = this.tag.getAttribute('page_link');
  
      this.onclick = this.tag.onclick;
      this.tag.onclick = null;
***************
*** 218,254 ****
      }
    },
  
- 	open_action: function() {
- 		if (this.position) this.disable();
  
- 		if (this.page_link) {
- 			window.location = this.url;
- 		} else {
- 			if (this.loading_indicator) this.loading_indicator.style.visibility = 'visible';
- 	    new Ajax.Request(this.url, {
- 	      asynchronous: true,
- 	      evalScripts: true,
  
- 	      onSuccess: function(request) {
- 	        if (this.position) {
- 	          this.insert(request.responseText);
- 	          if (this.hide_target) this.target.hide();
- 	        } else {
- 	          request.evalResponse();
- 	        }
- 	      }.bind(this),
  
- 	      onFailure: function(request) {
- 	        ActiveScaffold.report_500_response(this.scaffold_id());
- 	        if (this.position) this.enable()
- 	      }.bind(this),
  
- 	      onComplete: function(request) {
- 	        if (this.loading_indicator) this.loading_indicator.style.visibility = 'hidden';
- 	      }.bind(this)
- 			});
- 		}
- 	},
  
    insert: function(content) {
      throw 'unimplemented'
--- 218,255 ----
      }
    },
  
+         open_action: function() {
+                 if (this.position) this.disable();
  
+                 if (this.page_link) {
+                         window.location = this.url;
+                 } else {
+                         if (this.loading_indicator) this.loading_indicator.style.visibility = 'visible';
+             new Ajax.Request(this.url, {
+               asynchronous: true,
+               evalScripts: true,
  
+               onSuccess: function(request) {
+                 if (this.position) {
+                   this.insert(request.responseText);
+                   if (this.hide_target) this.target.hide();
+                 } else {
+                   request.evalResponse();
+                 }
+               }.bind(this),
  
+               onFailure: function(request) {
+                 ActiveScaffold.report_500_response(this.scaffold_id());
+                 if (this.position) this.enable()
+               }.bind(this),
  
+               onComplete: function(request) {
+                 if (this.loading_indicator) this.loading_indicator.style.visibility = 'hidden';
+                 init_tinyMCE();
+               }.bind(this)
+                         });
+                 }
+         },
  
    insert: function(content) {
      throw 'unimplemented'
